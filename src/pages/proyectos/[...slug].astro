---
function checkValue(value) {
  if (value === undefined || value === null) return false;
  if (typeof value === 'string' && value.trim() === '') return false;
  if (Array.isArray(value) && value.length === 0) return false;
  return true;
}

import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import ProjectGallery from '../../components/projectgallery/ProjectGallery'; // Aseg√∫rate de tener este componente
import SimpleGallery from '../../components/projectgallery/SimpleGallery';
import ProjectCard from '../../components/ProjectCardSimilar.astro'; // Aseg√∫rate de tener este componente
import { 
  Clock, 
  MapPin, 
  CalendarRange, 
  Building2, 
  Ruler,
  DollarSign 
} from 'lucide-react';

export async function getStaticPaths() {
  const projects = await getCollection('projects');
  const lineas = await getCollection('lineas');
  
  return projects.map(project => {
    // Encontrar proyectos similares
    const similarProjects = projects
      .filter(p => 
        // Es de la misma l√≠nea pero no es el mismo proyecto
        p.slug !== project.slug && 
        p.data.linea === project.data.linea
      )
      // Priorizar proyectos destacados
      .sort((a, b) => {
        // Si uno es destacado y otro no, el destacado va primero
        if (a.data.featured && !b.data.featured) return -1;
        if (!a.data.featured && b.data.featured) return 1;
        // Ordenar por fecha de inicio, m√°s recientes primero
        return new Date(b.data.fechaInicio) - new Date(a.data.fechaInicio);
      })
      // Limitar a m√°ximo 4 proyectos similares
      .slice(0, 4);
    
    return {
      params: { slug: project.slug },
      props: { 
        project,
        linea: lineas.find(linea => linea.slug === project.data.linea),
        similarProjects
      },
    };
  });
}

const { project, linea, similarProjects } = Astro.props;
const { Content } = await project.render();

// Formatear fecha
const formatDate = (date: Date) => {
  return date.toLocaleDateString('es-ES', {
    year: 'numeric',
    month: 'long'
  });
}

const path_proyectos = import.meta.env.PUBLIC_PATH_PROJECTS;
---

<Layout bgColorNavBar="bg-blue-600">
  <main class="w-full max-w-screen-xl mx-auto px-4 py-12 mt-24">
    <article class="bg-white rounded-lg shadow-lg overflow-hidden">
      {/* Header con imagen principal */}
      <div class="relative">
        <div class="relative aspect-video w-full overflow-hidden">
          <img 
            src={project.data.image} 
            alt={project.data.title}
            class="w-full h-full object-cover"
          />
          <div class="absolute inset-0 bg-gradient-to-t from-black/50 to-transparent"></div>
        </div>

        {/* Navegaci√≥n */}
        <div class="absolute top-4 left-4 flex gap-2">
          <a 
            href=`/${path_proyectos}`
            class="inline-flex items-center px-3 py-2 rounded-lg text-sm bg-white/90 backdrop-blur-sm hover:bg-white transition-colors"
            style="font-weight: 500;"
          >
            ‚Üê Volver a Proyectos
          </a>
          {linea && (
            <a 
              href={`/${path_proyectos}?linea=${linea.slug}`}
              class="inline-flex items-center px-3 py-2 rounded-lg text-sm bg-blue-600/90 text-white backdrop-blur-sm hover:bg-blue-600 transition-colors"
              style="font-weight: 500;"
            >
              {linea.data.title}
            </a>
          )}
        </div>

        {/* Estado del proyecto */}
        <div class="absolute top-4 right-4">
          <span class={`px-4 py-2 rounded-lg text-sm backdrop-blur-md
            ${project.data.status === 'en-proceso' 
              ? 'bg-blue-500/80 text-white' 
              : project.data.status === 'completado'
                ? 'bg-green-500/80 text-white'
                : 'bg-gray-500/80 text-white'}`}
            style="font-weight: 500;"
          >
            {project.data.status === 'en-proceso' ? '‚ö° En Proceso' : 
             project.data.status === 'completado' ? '‚úì Completado' : 
             'üîú Planificado'}
          </span>
        </div>
      </div>

      <div class="p-8">
        {/* Informaci√≥n principal */}
        <header class="mb-12">
          {checkValue(project.data.title) && (
            <h1 class="text-[28px] mb-4" style="font-weight: 700;">{project.data.title}</h1>
          )}

          {checkValue(project.data.description) && (
            <p class="text-[18px] text-gray-600 mb-8">{project.data.description}</p>
          )}

          {/* Contenido del proyecto */}
          <div class="prose max-w-none mb-12">
            <Content />
          </div>
          
          {/* Detalles del proyecto */}
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            
            {checkValue(project.data.client) && (
              <div class="flex items-start gap-3">
                <Building2 class="w-5 h-5 text-blue-600 mt-1" />
                <div>
                  <div style="font-weight: 500;">Cliente</div>
                  <div class="text-gray-600">{project.data.client}</div>
                </div>
              </div>
            )}

            {checkValue(project.data.ubicacion) && (
              <div class="flex items-start gap-3">
                <MapPin class="w-5 h-5 text-blue-600 mt-1" />
                <div>                
                  <div style="font-weight: 500;">Ubicaci√≥n</div>
                  <div class="text-gray-600">{project.data.ubicacion}</div>                 
                </div> 
              </div>
            )}

            {checkValue(project.data.superficie) && (
              <div class="flex items-start gap-3">
                <Ruler class="w-5 h-5 text-blue-600 mt-1" />
                <div>
                  <div style="font-weight: 500;">Superficie</div>
                  <div class="text-gray-600">{project.data.superficie}</div>
                </div>
              </div>
            )}

          {(checkValue(project.data.fechaInicio) && checkValue(project.data.fechaFinalizacion)) && (
            <div class="flex items-start gap-3">
              <Clock class="w-5 h-5 text-blue-600 mt-1" />
              <div>
                <div style="font-weight: 500;">Per√≠odo</div>
                <div class="text-gray-600">
                  {formatDate(project.data.fechaInicio)}
                  {project.data.fechaFinalizacion && ` - ${formatDate(project.data.fechaFinalizacion)}`}
                </div>
              </div>
            </div>
          )}

            {checkValue(project.data.presupuesto) && (
              <div class="flex items-start gap-3">
                <DollarSign class="w-5 h-5 text-blue-600 mt-1" />
                <div>
                  <div style="font-weight: 500;">Presupuesto</div>
                  <div class="text-gray-600">{project.data.presupuesto}</div>
                </div>
              </div>
            )}
          </div>
        </header>

        {/* Galer√≠as de antes/despu√©s */}
        {(checkValue(project.data.galeriaBefore) || checkValue(project.data.galeriaAfter)) && (
          <div class="mb-12">
            <h2 class="text-[24px] mb-8" style="font-weight: 700;">
              Transformaci√≥n del Proyecto
            </h2>
            <div class="space-y-8">
              {checkValue(project.data.galeriaBefore) && project.data.galeriaBefore.length > 0 && (
                <SimpleGallery
                  title="Estado Inicial"
                  images={project.data.galeriaBefore}
                  client:visible
                />
              )}
              
              {checkValue(project.data.galeriaAfter) && project.data.galeriaAfter.length > 0 && (
                <SimpleGallery
                  title="Resultado Final"
                  images={project.data.galeriaAfter}
                  client:visible
                />
              )}
            </div>
          </div>
        )}

        {/* Alcance del proyecto */}
        <!-- {checkValue(project.data.alcance) && (
          <div class="mb-12">
            <h2 class="text-[24px] mb-6" style="font-weight: 700;">
              Alcance del Proyecto
            </h2>
            <ul class="grid grid-cols-1 md:grid-cols-2 gap-4">
              {project.data.alcance.map(item => (
                <li class="flex items-start gap-2">
                  <span class="text-blue-600 mt-1">‚Ä¢</span>
                  <span>{item}</span>
                </li>
              ))}
            </ul>
          </div>
        )} -->

        

        {/* Videos del proyecto */}
        {checkValue(project.data.videos) && project.data.videos.length > 0 && (
          <div class="mb-12">
            <h2 class="text-[24px] mb-6" style="font-weight: 700;">
              Videos del Proyecto
            </h2>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
              {project.data.videos.map(video => (
                <div class="bg-gray-100 rounded-lg overflow-hidden">
                  {video.type === 'youtube' ? (
                    <div class="aspect-video">
                      <iframe
                        width="100%"
                        height="100%"
                        src={`https://www.youtube.com/embed/${video.url.split('v=')[1]}`}
                        title={video.title}
                        frameborder="0"
                        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                        allowfullscreen
                        class="rounded-lg"
                      ></iframe>
                    </div>
                  ) : (
                    <video
                      src={video.url}
                      controls
                      poster={video.thumbnail}
                      class="w-full rounded-lg aspect-video object-cover"
                    >
                      <p>Tu navegador no soporta videos HTML5.</p>
                    </video>
                  )}
                  <div class="p-4">
                    <h3 style="font-weight: 500;">{video.title}</h3>
                  </div>
                </div>
              ))}
            </div>
          </div>
        )}

        {/* Equipo del proyecto */}
        {checkValue(project.data.equipo) && project.data.equipo.length > 0 && (
          <div class="border-t border-gray-200 pt-8">
            <h2 class="text-[24px] mb-6" style="font-weight: 700;">
              Equipo del Proyecto
            </h2>
            <div class="grid grid-cols-2 md:grid-cols-4 gap-6">
              {project.data.equipo.map(miembro => (
                <div class="text-center">
                  <div style="font-weight: 500;">{miembro.nombre}</div>
                  <div class="text-sm text-gray-600">{miembro.cargo}</div>
                </div>
              ))}
            </div>
          </div>
        )}
        
        {/* SECCI√ìN NUEVA: Proyectos Similares */}
        {similarProjects.length > 0 && (
          <div class="border-t border-gray-200 pt-12 mt-12">
            <h2 class="text-[24px] mb-6" style="font-weight: 700;">
              Proyectos Similares
            </h2>
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
              {similarProjects.map(similarProject => (
                <ProjectCard 
                  title={similarProject.data.title}
                  description={similarProject.data.description}
                  image={similarProject.data.image}
                  slug={similarProject.slug}
                  client={similarProject.data.client}
                  location={similarProject.data.ubicacion}
                  status={similarProject.data.status}
                  linea={linea?.data.title || ''}
                  lineaSlug={linea?.slug || ''}
                />
              ))}
            </div>
          </div>
        )}
      </div>
    </article>
  </main>
</Layout>

<style>
  /* Estilos para el contenido Markdown */
  :global(.prose h2) {
    font-size: 24px;
    font-weight: 700;
    margin-bottom: 1rem;
    margin-top: 2rem;
  }
  
  :global(.prose h3) {
    font-size: 20px;
    font-weight: 600;
    margin-bottom: 0.75rem;
    margin-top: 1.5rem;
  }
  
  :global(.prose p) {
    margin-bottom: 1rem;
    color: rgb(75 85 99);
  }
  
  :global(.prose ul) {
    margin-bottom: 1rem;
    list-style-type: disc;
    list-style-position: inside;
  }
  
  :global(.prose li) {
    color: rgb(75 85 99);
    margin-bottom: 0.5rem;
  }
</style>